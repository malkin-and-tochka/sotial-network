{"version":3,"file":"static/js/143.9273dd05.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/profile/myPosts/post/post.module.css?a198","components/profile/myPosts/post/post.jsx","components/profile/myPosts/myPosts.jsx","webpack://first-project/./src/components/profile/profileInfo/profileInfo.module.css?01bc","webpack://first-project/./src/components/profile/profileInfo/profileDataForm/profileDataForm.module.css?a8f8","components/profile/profileInfo/profileDataForm/profileDataForm.jsx","components/profile/profileInfo/profileInfo.jsx","webpack://first-project/./src/components/profile/profile.module.css?5210","webpack://first-project/./src/components/profile/profilePostForm/profilePostForm.module.css?d218","components/profile/profilePostForm/profilePostForm.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"post_post__BhTfG\",\"name\":\"post_name__P9qQM\"};","import s from './post.module.css'\r\n\r\nconst Post = (props) =>{\r\n\r\n  return(\r\n    <div className={s.post}>\r\n      <span className={s.name}>{props.userName}</span> <br />\r\n      {props.post}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post","import Post from './post/post'\r\n\r\nconst MyPosts = (props) =>{\r\n  let post = props.posts.map((p) => \r\n    <Post key={p.id} userName={p.name} id={p.id} post={p.post}/>\r\n  )\r\n  return(\r\n    <ul>\r\n      {post}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default MyPosts","// extracted by mini-css-extract-plugin\nexport default {\"profileWrapper\":\"profileInfo_profileWrapper__-esiH\",\"profile\":\"profileInfo_profile__Vagtk\",\"profileEditMode\":\"profileInfo_profileEditMode__MiEbM\",\"row\":\"profileInfo_row__miibg\",\"userIconWrapper\":\"profileInfo_userIconWrapper__xWOPc\",\"userIcon\":\"profileInfo_userIcon__+q7T7\",\"userInfo\":\"profileInfo_userInfo__j3Ttf\",\"topInfo\":\"profileInfo_topInfo__1Impc\",\"userName\":\"profileInfo_userName__BkMXP\",\"moreInfo\":\"profileInfo_moreInfo__QAUSQ\",\"bottomInfo\":\"profileInfo_bottomInfo__8+Ldj\",\"postButton\":\"profileInfo_postButton__D9G4a\"};","// extracted by mini-css-extract-plugin\nexport default {\"userInfoWrapper\":\"profileDataForm_userInfoWrapper__7hByC\",\"profileDataFormButton\":\"profileDataForm_profileDataFormButton__l3W+G\"};","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport style from './profileDataForm.module.css'\r\n\r\nconst ProfileDataForm = (props) => {\r\n    const submit = (values, {setSubmitting}) => {  // вторым параметром добавляем  setStatus\r\n        props.saveProfile(values)\r\n        setSubmitting(true);\r\n        props.deactivateEditMode()\r\n    };\r\n    return (\r\n        <Formik\r\n            initialValues={props.profile}\r\n            //initialValues={{lookingForAJobDescription:'', lookingForAJob:true, aboutMe:'', fullName:'', contacts:{github:'', vk:'', facebook:'', instagram:'', twitter:'', website:'', youtube:'', mainLink:''}}}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => <Form className={style.userInfoWrapper}>\r\n\r\n                <span>Full name:</span><Field placeholder=\"Name\" name=\"fullName\" type=\"input\"/>\r\n                <span>Looking for a job <Field name=\"lookingForAJob\" type=\"checkbox\"/></span>\r\n                <span>About me:</span>\r\n                <Field placeholder=\"About me\" name=\"aboutMe\" type=\"input\"/>\r\n                <span>My professional skills:</span>\r\n                <Field name=\"lookingForAJobDescription\" type=\"input\"/>\r\n                <span>Your contacts:</span>\r\n                <span>Your github:</span>\r\n                <Field placeholder=\"Your github\" name=\"contacts.github\" type=\"input\"/>\r\n                <span>Your vk:</span>\r\n                <Field placeholder=\"Your vk\" name=\"contacts.vk\" type=\"input\"/>\r\n                <span>Your facebook:</span>\r\n                <Field placeholder=\"Your facebook\" name=\"contacts.facebook\" type=\"input\"/>\r\n                <span>Your instagram:</span>\r\n                <Field placeholder=\"Your instagram\" name=\"contacts.instagram\" type=\"input\"/>\r\n                <span>Your twitter:</span>\r\n                <Field placeholder=\"Your twitter\" name=\"contacts.twitter\" type=\"input\"/>\r\n                <span>Your website:</span>\r\n                <Field placeholder=\"Your website\" name=\"contacts.website\" type=\"input\"/>\r\n                <span>Your youtube:</span>\r\n                <Field placeholder=\"Your youtube\" name=\"contacts.youtube\" type=\"input\"/>\r\n                <span>Your mainLink:</span>\r\n                <Field placeholder=\"Your mainLink\" name=\"contacts.mainLink\" type=\"input\"/>\r\n                <button className={style.profileDataFormButton} type=\"submit\" disabled={isSubmitting}>Save changes</button>\r\n            </Form>}\r\n        </Formik>\r\n    )\r\n}\r\n// github: required(string)\r\n// vk: required(string)\r\n// facebook: required(string)\r\n// instagram: required(string)\r\n// twitter: required(string)\r\n// website: required(string)\r\n// youtube: required(string)\r\n// mainLink\r\n\r\nexport default ProfileDataForm","import React, {useEffect, useState} from \"react\";\r\nimport style from './profileInfo.module.css'\r\nimport usersAvatar from '../../../assets/img/testUser.png'\r\nimport ProfileDataForm from \"./profileDataForm/profileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setAditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        if (!status) {\r\n            setStatus(props.status)\r\n        }\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setAditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setAditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    const selectAvatarPhoto = (e) => {\r\n        if (e.target.files.length)\r\n            props.props.saveAvatarPhoto(e.target.files[0])\r\n    }\r\n    return (\r\n        <div className={!editMode ? style.profile : style.profileEditMode}>\r\n            <div className={style.top}>\r\n                <div className={style.row}>\r\n                    <div className={style.userIconWrapper}>\r\n                        <img src={props.profile.photos.large || usersAvatar} className={style.userIcon}/>\r\n                    </div>\r\n                    <div className={style.userInfo}>\r\n                        <div className={style.topInfo}>\r\n                            <div className={style.userName}>\r\n                                {props.props.profile.fullName}\r\n                            </div>\r\n                            {props.props.isOwner &&\r\n                                <button onClick={activateEditMode} className={style.moreInfo}>\r\n                                    Change<span>></span>\r\n                                </button>\r\n                            }\r\n\r\n                        </div>\r\n                        <div className={style.bottomInfo}>\r\n                            <div className={style.aboutMe}>\r\n                                Status:<br/>\r\n                                {\r\n                                    editMode &&\r\n                                    <div>\r\n                                        <input autoFocus={true} onChange={onStatusChange}\r\n                                               value={status}/>\r\n                                        <div>\r\n                                            <input type=\"file\" onChange={selectAvatarPhoto}/>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    !editMode &&\r\n                                    <div>\r\n                                        {props.status}\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    !editMode &&\r\n                                    <div>\r\n                                        Looking for a job: {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                                    </div>\r\n                                }\r\n\r\n                                {\r\n                                    props.profile.aboutMe &&\r\n                                    <div>\r\n                                        About me: {props.profile.aboutMe}\r\n                                    </div>\r\n                                }\r\n                                {editMode ? <ProfileDataForm deactivateEditMode={deactivateEditMode}\r\n                                                             saveProfile={props.saveProfile}\r\n                                                             profile={props.profile}/> :\r\n                                    <ProfileData profile={props.profile}/>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactTitle}: {contactValue}\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            {\r\n                !Object.keys(props.profile.contacts).lenght ?\r\n                    <div>\r\n                        Contacts:<br/>\r\n                        {Object.keys(props.profile.contacts).filter(key => props.profile.contacts[key]).map(key => {\r\n                            return (\r\n                                <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                            )\r\n                        })}\r\n                    </div> : \"\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"profileWrapper\":\"profile_profileWrapper__n5C6e\",\"postButton\":\"profile_postButton__60B7T\"};","// extracted by mini-css-extract-plugin\nexport default {\"textarea\":\"profilePostForm_textarea__pKohR\",\"postButton\":\"profilePostForm_postButton__5bY7B\",\"error\":\"profilePostForm_error__whBEU\",\"textError\":\"profilePostForm_textError__qMKqo\"};","import { Form, Formik, Field } from \"formik\"\r\nimport style from './profilePostForm.module.css'\r\nimport * as yup from 'yup'\r\nimport React from \"react\"\r\n\r\n\r\nconst ProfilePostForm =(props)=>{\r\n  const addNewPost =(values)=>{\r\n    props.addPost(values.newPost)\r\n    values.newPost=''\r\n  }\r\n\r\n  const validationSchema = yup.object().shape({\r\n    newPost: yup.string().typeError('Должно быть сообщение!').required('Пост пустой!')\r\n  })\r\n  \r\n  return(\r\n    <Formik\r\n      initialValues={{newPost:''}}\r\n      onSubmit={addNewPost}\r\n      validationSchema={validationSchema}\r\n      className={style.createPost} >\r\n      {({touched, values, handleSubmit, errors, handleBlur, isValid, dirty, handleChange})=>(\r\n      <Form>\r\n        <Field value={values.newPost} onBlur={handleBlur} onChange={handleChange} className={!(errors.newPost && touched.newPost) ? style.textarea : style.error} name='newPost' type='textarea' placeholder='Write there...'/>\r\n          {errors.newPost && touched.newPost && <p className={style.textError}>{errors.newPost}</p>}\r\n        <div>\r\n          <button disabled={!isValid && !dirty} onClick={handleSubmit} className={style.postButton} type='submit'>\r\n            New Post\r\n          </button>\r\n        </div>\r\n      </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst ProfilePostFormMemo = React.memo(ProfilePostForm)\r\n\r\nexport default ProfilePostFormMemo","import MyPosts from './myPosts/myPosts'\r\nimport ProfileInfo from './profileInfo/profileInfo'\r\nimport style from './profile.module.css'\r\nimport React from 'react'\r\nimport Preloader from '../../common/Preloader'\r\nimport ProfilePostFormMemo from './profilePostForm/profilePostForm'\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.profileWrapper}>\r\n            <ProfileInfo saveProfile={props.saveProfile} profile={props.profile} updateStatus={props.updateStatus} status={props.status} props={props}/>\r\n            <ProfilePostFormMemo {...props}/>\r\n            <MyPosts posts={props.postsState.postsData}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile ","import { addPost, setUserProfile, getUsersData, getStatus, updateStatus, saveAvatarPhoto, saveProfile } from '../../redux/profile-reduce'\r\nimport Profile from './profile'\r\nimport {connect} from 'react-redux'\r\nimport React from 'react'\r\nimport {useLocation,useNavigate,useParams} from \"react-router-dom\";\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n    refreshUser(){\r\n        let userId = this.props.router.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId\r\n        }\r\n        this.props.getUsersData(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n  componentDidMount(){\r\n        this.refreshUser()\r\n  }\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n      if(prevProps.router.params.userId !== this.props.router.params.userId){\r\n          this.refreshUser()\r\n      }\r\n  }\r\n\r\n\r\n    render(){\r\n    return(\r\n      <Profile {...this.props} isOwner={!this.props.router.params.userId} profile={this.props.profileState} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return{\r\n    postsState: state.ProfileDataWrapper,\r\n    profileState: state.ProfileDataWrapper.profile,\r\n    status: state.ProfileDataWrapper.status,\r\n    isAuth: state.authDataWrapper.isAuth,\r\n    authorizedUserId: state.authDataWrapper.userId\r\n  }\r\n}\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n          <Component\r\n              {...props}\r\n              router={{ location, navigate, params }}\r\n          />\r\n      );\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nexport default   \r\ncompose(\r\n  connect(mapStateToProps,{addPost, setUserProfile, getUsersData, getStatus, updateStatus, saveAvatarPhoto, saveProfile}),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) =>{\r\n  return{\r\n    isAuth:state.authDataWrapper.isAuth\r\n  }\r\n}\r\n\r\nconst withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component{\r\n    render(){\r\n      if(!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent) \r\n\r\n  return ConnectedAuthRedirectComponent\r\n}\r\n\r\nexport default withAuthRedirect"],"names":["props","className","s","userName","post","posts","map","p","name","id","initialValues","profile","onSubmit","values","setSubmitting","saveProfile","deactivateEditMode","isSubmitting","style","placeholder","type","disabled","Contact","contactTitle","contactValue","ProfileData","Object","keys","contacts","lenght","filter","key","useState","editMode","setAditMode","status","setStatus","useEffect","src","photos","large","usersAvatar","fullName","isOwner","onClick","autoFocus","onChange","e","currentTarget","value","target","files","length","saveAvatarPhoto","lookingForAJob","aboutMe","updateStatus","ProfilePostForm","validationSchema","yup","shape","newPost","typeError","required","addPost","touched","handleSubmit","errors","handleBlur","isValid","dirty","handleChange","onBlur","React","postsState","postsData","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","getUsersData","getStatus","refreshUser","prevProps","prevState","snapshot","profileState","compose","connect","state","ProfileDataWrapper","isAuth","authDataWrapper","setUserProfile","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}